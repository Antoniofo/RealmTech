package ch.realmtechServer.ecs.system;

import org.junit.jupiter.api.Test;

import static ch.realmtechServer.ecs.system.MapManager.*;
import static org.junit.jupiter.api.Assertions.assertEquals;

class MapManagerTest {

    @Test
    void getInnerChunkWorldPosPositifTest() {
        assertEquals(getInnerChunk(0), 0);
        assertEquals(getInnerChunk(1), 1);
        assertEquals(getInnerChunk(2), 2);
        assertEquals(getInnerChunk(3), 3);
        assertEquals(getInnerChunk(4), 4);
        assertEquals(getInnerChunk(5), 5);
        assertEquals(getInnerChunk(6), 6);
        assertEquals(getInnerChunk(7), 7);
        assertEquals(getInnerChunk(8), 8);
        assertEquals(getInnerChunk(9), 9);
        assertEquals(getInnerChunk(10), 10);
        assertEquals(getInnerChunk(11), 11);
        assertEquals(getInnerChunk(12), 12);
        assertEquals(getInnerChunk(13), 13);
        assertEquals(getInnerChunk(14), 14);
        assertEquals(getInnerChunk(15), 15);
        assertEquals(getInnerChunk(16), 0);
        assertEquals(getInnerChunk(17), 1);
        assertEquals(getInnerChunk(18), 2);
        assertEquals(getInnerChunk(19), 3);
        assertEquals(getInnerChunk(20), 4);
        assertEquals(getInnerChunk(21), 5);
        assertEquals(getInnerChunk(22), 6);
        assertEquals(getInnerChunk(23), 7);
        assertEquals(getInnerChunk(24), 8);
        assertEquals(getInnerChunk(25), 9);
        assertEquals(getInnerChunk(26), 10);
        assertEquals(getInnerChunk(27), 11);
        assertEquals(getInnerChunk(28), 12);
        assertEquals(getInnerChunk(29), 13);
        assertEquals(getInnerChunk(30), 14);
        assertEquals(getInnerChunk(31), 15);
        assertEquals(getInnerChunk(32), 0);
        assertEquals(getInnerChunk(33), 1);
        assertEquals(getInnerChunk(34), 2);
        assertEquals(getInnerChunk(35), 3);
        assertEquals(getInnerChunk(36), 4);
        assertEquals(getInnerChunk(37), 5);
        assertEquals(getInnerChunk(38), 6);
        assertEquals(getInnerChunk(39), 7);
        assertEquals(getInnerChunk(40), 8);
        assertEquals(getInnerChunk(41), 9);
        assertEquals(getInnerChunk(42), 10);
        assertEquals(getInnerChunk(43), 11);
        assertEquals(getInnerChunk(44), 12);
        assertEquals(getInnerChunk(45), 13);
        assertEquals(getInnerChunk(46), 14);
        assertEquals(getInnerChunk(47), 15);
        assertEquals(getInnerChunk(48), 0);
        assertEquals(getInnerChunk(49), 1);
        assertEquals(getInnerChunk(50), 2);
        assertEquals(getInnerChunk(51), 3);
        assertEquals(getInnerChunk(52), 4);
        assertEquals(getInnerChunk(53), 5);
        assertEquals(getInnerChunk(54), 6);
        assertEquals(getInnerChunk(55), 7);
        assertEquals(getInnerChunk(56), 8);
        assertEquals(getInnerChunk(57), 9);
        assertEquals(getInnerChunk(58), 10);
        assertEquals(getInnerChunk(59), 11);
        assertEquals(getInnerChunk(60), 12);
        assertEquals(getInnerChunk(61), 13);
        assertEquals(getInnerChunk(62), 14);
        assertEquals(getInnerChunk(63), 15);
    }

    @Test
    void getInnerChunkWorldPosNegatifTest() {
        assertEquals(getInnerChunk(-1), 15);
        assertEquals(getInnerChunk(-2), 14);
        assertEquals(getInnerChunk(-3), 13);
        assertEquals(getInnerChunk(-4), 12);
        assertEquals(getInnerChunk(-5), 11);
        assertEquals(getInnerChunk(-6), 10);
        assertEquals(getInnerChunk(-7), 9);
        assertEquals(getInnerChunk(-8), 8);
        assertEquals(getInnerChunk(-9), 7);
        assertEquals(getInnerChunk(-10), 6);
        assertEquals(getInnerChunk(-11), 5);
        assertEquals(getInnerChunk(-12), 4);
        assertEquals(getInnerChunk(-13), 3);
        assertEquals(getInnerChunk(-14), 2);
        assertEquals(getInnerChunk(-15), 1);
        assertEquals(getInnerChunk(-16), 0);
        assertEquals(getInnerChunk(-17), 15);
        assertEquals(getInnerChunk(-18), 14);
        assertEquals(getInnerChunk(-19), 13);
        assertEquals(getInnerChunk(-20), 12);
        assertEquals(getInnerChunk(-21), 11);
        assertEquals(getInnerChunk(-22), 10);
        assertEquals(getInnerChunk(-23), 9);
        assertEquals(getInnerChunk(-24), 8);
        assertEquals(getInnerChunk(-25), 7);
        assertEquals(getInnerChunk(-26), 6);
        assertEquals(getInnerChunk(-27), 5);
        assertEquals(getInnerChunk(-28), 4);
        assertEquals(getInnerChunk(-29), 3);
        assertEquals(getInnerChunk(-30), 2);
        assertEquals(getInnerChunk(-31), 1);
        assertEquals(getInnerChunk(-32), 0);
        assertEquals(getInnerChunk(-33), 15);
        assertEquals(getInnerChunk(-34), 14);
        assertEquals(getInnerChunk(-35), 13);
        assertEquals(getInnerChunk(-36), 12);
        assertEquals(getInnerChunk(-37), 11);
        assertEquals(getInnerChunk(-38), 10);
        assertEquals(getInnerChunk(-39), 9);
        assertEquals(getInnerChunk(-40), 8);
        assertEquals(getInnerChunk(-41), 7);
        assertEquals(getInnerChunk(-42), 6);
        assertEquals(getInnerChunk(-43), 5);
        assertEquals(getInnerChunk(-44), 4);
        assertEquals(getInnerChunk(-45), 3);
        assertEquals(getInnerChunk(-46), 2);
        assertEquals(getInnerChunk(-47), 1);
        assertEquals(getInnerChunk(-48), 0);
        assertEquals(getInnerChunk(-49), 15);
        assertEquals(getInnerChunk(-50), 14);
        assertEquals(getInnerChunk(-51), 13);
        assertEquals(getInnerChunk(-52), 12);
        assertEquals(getInnerChunk(-53), 11);
        assertEquals(getInnerChunk(-54), 10);
        assertEquals(getInnerChunk(-55), 9);
        assertEquals(getInnerChunk(-56), 8);
        assertEquals(getInnerChunk(-57), 7);
        assertEquals(getInnerChunk(-58), 6);
        assertEquals(getInnerChunk(-59), 5);
        assertEquals(getInnerChunk(-60), 4);
        assertEquals(getInnerChunk(-61), 3);
        assertEquals(getInnerChunk(-62), 2);
        assertEquals(getInnerChunk(-63), 1);
        assertEquals(getInnerChunk(-64), 0);
    }

    @Test
    void getChunkPosViaWorldPositifTest() {
        assertEquals(getChunkPos(	0	),	0	);
        assertEquals(getChunkPos(	1	),	0	);
        assertEquals(getChunkPos(	2	),	0	);
        assertEquals(getChunkPos(	3	),	0	);
        assertEquals(getChunkPos(	4	),	0	);
        assertEquals(getChunkPos(	5	),	0	);
        assertEquals(getChunkPos(	6	),	0	);
        assertEquals(getChunkPos(	7	),	0	);
        assertEquals(getChunkPos(	8	),	0	);
        assertEquals(getChunkPos(	9	),	0	);
        assertEquals(getChunkPos(	10	),	0	);
        assertEquals(getChunkPos(	11	),	0	);
        assertEquals(getChunkPos(	12	),	0	);
        assertEquals(getChunkPos(	13	),	0	);
        assertEquals(getChunkPos(	14	),	0	);
        assertEquals(getChunkPos(	15	),	0	);
        assertEquals(getChunkPos(	16	),	1	);
        assertEquals(getChunkPos(	17	),	1	);
        assertEquals(getChunkPos(	18	),	1	);
        assertEquals(getChunkPos(	19	),	1	);
        assertEquals(getChunkPos(	20	),	1	);
        assertEquals(getChunkPos(	21	),	1	);
        assertEquals(getChunkPos(	22	),	1	);
        assertEquals(getChunkPos(	23	),	1	);
        assertEquals(getChunkPos(	24	),	1	);
        assertEquals(getChunkPos(	25	),	1	);
        assertEquals(getChunkPos(	26	),	1	);
        assertEquals(getChunkPos(	27	),	1	);
        assertEquals(getChunkPos(	28	),	1	);
        assertEquals(getChunkPos(	29	),	1	);
        assertEquals(getChunkPos(	30	),	1	);
        assertEquals(getChunkPos(	31	),	1	);
        assertEquals(getChunkPos(	32	),	2	);
        assertEquals(getChunkPos(	33	),	2	);
        assertEquals(getChunkPos(	34	),	2	);
        assertEquals(getChunkPos(	35	),	2	);
        assertEquals(getChunkPos(	36	),	2	);
        assertEquals(getChunkPos(	37	),	2	);
        assertEquals(getChunkPos(	38	),	2	);
        assertEquals(getChunkPos(	39	),	2	);
        assertEquals(getChunkPos(	40	),	2	);
        assertEquals(getChunkPos(	41	),	2	);
        assertEquals(getChunkPos(	42	),	2	);
        assertEquals(getChunkPos(	43	),	2	);
        assertEquals(getChunkPos(	44	),	2	);
        assertEquals(getChunkPos(	45	),	2	);
        assertEquals(getChunkPos(	46	),	2	);
        assertEquals(getChunkPos(	47	),	2	);
    }

    @Test
    void getChunkPosViaWorldNegatifTest() {
        assertEquals(getChunkPos(	-1	    ),	-1	);
        assertEquals(getChunkPos(	-2	    ),	-1	);
        assertEquals(getChunkPos(	-3	    ),	-1	);
        assertEquals(getChunkPos(	-4	    ),	-1	);
        assertEquals(getChunkPos(	-5	    ),	-1	);
        assertEquals(getChunkPos(	-6	    ),	-1	);
        assertEquals(getChunkPos(	-7	    ),	-1	);
        assertEquals(getChunkPos(	-8	    ),	-1	);
        assertEquals(getChunkPos(	-9	    ),	-1	);
        assertEquals(getChunkPos(	-10	),	-1	);
        assertEquals(getChunkPos(	-11	),	-1	);
        assertEquals(getChunkPos(	-12	),	-1	);
        assertEquals(getChunkPos(	-13	),	-1	);
        assertEquals(getChunkPos(	-14	),	-1	);
        assertEquals(getChunkPos(	-15	),	-1	);
        assertEquals(getChunkPos(	-16	),	-1	);
        assertEquals(getChunkPos(	-17	),	-2	);
        assertEquals(getChunkPos(	-18	),	-2	);
        assertEquals(getChunkPos(	-19	),	-2	);
        assertEquals(getChunkPos(	-20	),	-2	);
        assertEquals(getChunkPos(	-21	),	-2	);
        assertEquals(getChunkPos(	-22	),	-2	);
        assertEquals(getChunkPos(	-23	),	-2	);
        assertEquals(getChunkPos(	-24	),	-2	);
        assertEquals(getChunkPos(	-25	),	-2	);
        assertEquals(getChunkPos(	-26	),	-2	);
        assertEquals(getChunkPos(	-27	),	-2	);
        assertEquals(getChunkPos(	-28	),	-2	);
        assertEquals(getChunkPos(	-29	),	-2	);
        assertEquals(getChunkPos(	-30	),	-2	);
        assertEquals(getChunkPos(	-31	),	-2	);
        assertEquals(getChunkPos(	-32	),	-2	);
        assertEquals(getChunkPos(	-33	),	-3	);
        assertEquals(getChunkPos(	-34	),	-3	);
        assertEquals(getChunkPos(	-35	),	-3	);
        assertEquals(getChunkPos(	-36	),	-3	);
        assertEquals(getChunkPos(	-37	),	-3	);
        assertEquals(getChunkPos(	-38	),	-3	);
        assertEquals(getChunkPos(	-39	),	-3	);
        assertEquals(getChunkPos(	-40	),	-3	);
        assertEquals(getChunkPos(	-41	),	-3	);
        assertEquals(getChunkPos(	-42	),	-3	);
        assertEquals(getChunkPos(	-43	),	-3	);
        assertEquals(getChunkPos(	-44	),	-3	);
        assertEquals(getChunkPos(	-45	),	-3	);
        assertEquals(getChunkPos(	-46	),	-3	);
        assertEquals(getChunkPos(	-47	),	-3	);
        assertEquals(getChunkPos(	-48	),	-3	);
    }

    @Test
    void getWorldPosViaChunkPositifTest() {
        assertEquals(getWorldPos(	0	,	0	),	0	);
        assertEquals(getWorldPos(	0	,	1	),	1	);
        assertEquals(getWorldPos(	0	,	2	),	2	);
        assertEquals(getWorldPos(	0	,	3	),	3	);
        assertEquals(getWorldPos(	0	,	4	),	4	);
        assertEquals(getWorldPos(	0	,	5	),	5	);
        assertEquals(getWorldPos(	0	,	6	),	6	);
        assertEquals(getWorldPos(	0	,	7	),	7	);
        assertEquals(getWorldPos(	0	,	8	),	8	);
        assertEquals(getWorldPos(	0	,	9	),	9	);
        assertEquals(getWorldPos(	0	,	10	),	10	);
        assertEquals(getWorldPos(	0	,	11	),	11	);
        assertEquals(getWorldPos(	0	,	12	),	12	);
        assertEquals(getWorldPos(	0	,	13	),	13	);
        assertEquals(getWorldPos(	0	,	14	),	14	);
        assertEquals(getWorldPos(	0	,	15	),	15	);
        assertEquals(getWorldPos(	1	,	0	),	16	);
        assertEquals(getWorldPos(	1	,	1	),	17	);
        assertEquals(getWorldPos(	1	,	2	),	18	);
        assertEquals(getWorldPos(	1	,	3	),	19	);
        assertEquals(getWorldPos(	1	,	4	),	20	);
        assertEquals(getWorldPos(	1	,	5	),	21	);
        assertEquals(getWorldPos(	1	,	6	),	22	);
        assertEquals(getWorldPos(	1	,	7	),	23	);
        assertEquals(getWorldPos(	1	,	8	),	24	);
        assertEquals(getWorldPos(	1	,	9	),	25	);
        assertEquals(getWorldPos(	1	,	10	),	26	);
        assertEquals(getWorldPos(	1	,	11	),	27	);
        assertEquals(getWorldPos(	1	,	12	),	28	);
        assertEquals(getWorldPos(	1	,	13	),	29	);
        assertEquals(getWorldPos(	1	,	14	),	30	);
        assertEquals(getWorldPos(	1	,	15	),	31	);
        assertEquals(getWorldPos(	2	,	0	),	32	);
        assertEquals(getWorldPos(	2	,	1	),	33	);
        assertEquals(getWorldPos(	2	,	2	),	34	);
        assertEquals(getWorldPos(	2	,	3	),	35	);
        assertEquals(getWorldPos(	2	,	4	),	36	);
        assertEquals(getWorldPos(	2	,	5	),	37	);
        assertEquals(getWorldPos(	2	,	6	),	38	);
        assertEquals(getWorldPos(	2	,	7	),	39	);
        assertEquals(getWorldPos(	2	,	8	),	40	);
        assertEquals(getWorldPos(	2	,	9	),	41	);
        assertEquals(getWorldPos(	2	,	10	),	42	);
        assertEquals(getWorldPos(	2	,	11	),	43	);
        assertEquals(getWorldPos(	2	,	12	),	44	);
        assertEquals(getWorldPos(	2	,	13	),	45	);
        assertEquals(getWorldPos(	2	,	14	),	46	);
        assertEquals(getWorldPos(	2	,	15	),	47	);
    }

    @Test
    void getWorldPosViaChunkNegatifTest() {
        assertEquals(getWorldPos(	-1	,	15	),	-1	);
        assertEquals(getWorldPos(	-1	,	14	),	-2	);
        assertEquals(getWorldPos(	-1	,	13	),	-3	);
        assertEquals(getWorldPos(	-1	,	12	),	-4	);
        assertEquals(getWorldPos(	-1	,	11	),	-5	);
        assertEquals(getWorldPos(	-1	,	10	),	-6	);
        assertEquals(getWorldPos(	-1	,	9	),	-7	);
        assertEquals(getWorldPos(	-1	,	8	),	-8	);
        assertEquals(getWorldPos(	-1	,	7	),	-9	);
        assertEquals(getWorldPos(	-1	,	6	),	-10	);
        assertEquals(getWorldPos(	-1	,	5	),	-11	);
        assertEquals(getWorldPos(	-1	,	4	),	-12	);
        assertEquals(getWorldPos(	-1	,	3	),	-13	);
        assertEquals(getWorldPos(	-1	,	2	),	-14	);
        assertEquals(getWorldPos(	-1	,	1	),	-15	);
        assertEquals(getWorldPos(	-1	,	0	),	-16	);
        assertEquals(getWorldPos(	-2	,	15	),	-17	);
        assertEquals(getWorldPos(	-2	,	14	),	-18	);
        assertEquals(getWorldPos(	-2	,	13	),	-19	);
        assertEquals(getWorldPos(	-2	,	12	),	-20	);
        assertEquals(getWorldPos(	-2	,	11	),	-21	);
        assertEquals(getWorldPos(	-2	,	10	),	-22	);
        assertEquals(getWorldPos(	-2	,	9	),	-23	);
        assertEquals(getWorldPos(	-2	,	8	),	-24	);
        assertEquals(getWorldPos(	-2	,	7	),	-25	);
        assertEquals(getWorldPos(	-2	,	6	),	-26	);
        assertEquals(getWorldPos(	-2	,	5	),	-27	);
        assertEquals(getWorldPos(	-2	,	4	),	-28	);
        assertEquals(getWorldPos(	-2	,	3	),	-29	);
        assertEquals(getWorldPos(	-2	,	2	),	-30	);
        assertEquals(getWorldPos(	-2	,	1	),	-31	);
        assertEquals(getWorldPos(	-2	,	0	),	-32	);
        assertEquals(getWorldPos(	-3	,	15	),	-33	);
        assertEquals(getWorldPos(	-3	,	14	),	-34	);
        assertEquals(getWorldPos(	-3	,	13	),	-35	);
        assertEquals(getWorldPos(	-3	,	12	),	-36	);
        assertEquals(getWorldPos(	-3	,	11	),	-37	);
        assertEquals(getWorldPos(	-3	,	10	),	-38	);
        assertEquals(getWorldPos(	-3	,	9	),	-39	);
        assertEquals(getWorldPos(	-3	,	8	),	-40	);
        assertEquals(getWorldPos(	-3	,	7	),	-41	);
        assertEquals(getWorldPos(	-3	,	6	),	-42	);
        assertEquals(getWorldPos(	-3	,	5	),	-43	);
        assertEquals(getWorldPos(	-3	,	4	),	-44	);
        assertEquals(getWorldPos(	-3	,	3	),	-45	);
        assertEquals(getWorldPos(	-3	,	2	),	-46	);
        assertEquals(getWorldPos(	-3	,	1	),	-47	);
        assertEquals(getWorldPos(	-3	,	0	),	-48	);
    }

    @Test
    void getWorldPosViaGameCoordinatePositifTest() {
        assertEquals(getWorldPos(	0	),	0	);
        assertEquals(getWorldPos(	1	),	1	);
        assertEquals(getWorldPos(	2	),	2	);
        assertEquals(getWorldPos(	3	),	3	);
        assertEquals(getWorldPos(	4	),	4	);
        assertEquals(getWorldPos(	5	),	5	);
        assertEquals(getWorldPos(	6	),	6	);
        assertEquals(getWorldPos(	7	),	7	);
        assertEquals(getWorldPos(	8	),	8	);
        assertEquals(getWorldPos(	9	),	9	);
        assertEquals(getWorldPos(	10	),	10	);
        assertEquals(getWorldPos(	11	),	11	);
        assertEquals(getWorldPos(	12	),	12	);
        assertEquals(getWorldPos(	13	),	13	);
        assertEquals(getWorldPos(	14	),	14	);
        assertEquals(getWorldPos(	15	),	15	);
        assertEquals(getWorldPos(	16	),	16	);
        assertEquals(getWorldPos(	17	),	17	);
        assertEquals(getWorldPos(	18	),	18	);
        assertEquals(getWorldPos(	19	),	19	);
        assertEquals(getWorldPos(	20	),	20	);
        assertEquals(getWorldPos(	21	),	21	);
        assertEquals(getWorldPos(	22	),	22	);
        assertEquals(getWorldPos(	23	),	23	);
        assertEquals(getWorldPos(	24	),	24	);
        assertEquals(getWorldPos(	25	),	25	);
        assertEquals(getWorldPos(	26	),	26	);
        assertEquals(getWorldPos(	27	),	27	);
        assertEquals(getWorldPos(	28	),	28	);
        assertEquals(getWorldPos(	29	),	29	);
        assertEquals(getWorldPos(	30	),	30	);
        assertEquals(getWorldPos(	31	),	31	);
        assertEquals(getWorldPos(	32	),	32	);
        assertEquals(getWorldPos(	33	),	33	);
        assertEquals(getWorldPos(	34	),	34	);
        assertEquals(getWorldPos(	35	),	35	);
        assertEquals(getWorldPos(	36	),	36	);
        assertEquals(getWorldPos(	37	),	37	);
        assertEquals(getWorldPos(	38	),	38	);
        assertEquals(getWorldPos(	39	),	39	);
        assertEquals(getWorldPos(	40	),	40	);
        assertEquals(getWorldPos(	41	),	41	);
        assertEquals(getWorldPos(	42	),	42	);
        assertEquals(getWorldPos(	43	),	43	);
        assertEquals(getWorldPos(	44	),	44	);
        assertEquals(getWorldPos(	45	),	45	);
        assertEquals(getWorldPos(	46	),	46	);
        assertEquals(getWorldPos(	47	),	47	);
    }
    @Test
    void getWorldPosViaGameCoordinateNegatifTest() {
        assertEquals(getWorldPos(   -0.1f   ),  -1    );
        assertEquals(getWorldPos(	-1	),	-2	);
        assertEquals(getWorldPos(	-2	),	-3	);
        assertEquals(getWorldPos(	-3	),	-4	);
        assertEquals(getWorldPos(	-4	),	-5	);
        assertEquals(getWorldPos(	-5	),	-6	);
        assertEquals(getWorldPos(	-6	),	-7	);
        assertEquals(getWorldPos(	-7	),	-8	);
        assertEquals(getWorldPos(	-8	),	-9	);
        assertEquals(getWorldPos(	-9	),	-10	);
        assertEquals(getWorldPos(	-10	),	-11	);
        assertEquals(getWorldPos(	-11	),	-12	);
        assertEquals(getWorldPos(	-12	),	-13	);
        assertEquals(getWorldPos(	-13	),	-14	);
        assertEquals(getWorldPos(	-14	),	-15	);
        assertEquals(getWorldPos(	-15	),	-16	);
        assertEquals(getWorldPos(	-16	),	-17	);
        assertEquals(getWorldPos(	-17	),	-18	);
        assertEquals(getWorldPos(	-18	),	-19	);
        assertEquals(getWorldPos(	-19	),	-20	);
        assertEquals(getWorldPos(	-20	),	-21	);
        assertEquals(getWorldPos(	-21	),	-22	);
        assertEquals(getWorldPos(	-22	),	-23	);
        assertEquals(getWorldPos(	-23	),	-24	);
        assertEquals(getWorldPos(	-24	),	-25	);
        assertEquals(getWorldPos(	-25	),	-26	);
        assertEquals(getWorldPos(	-26	),	-27	);
        assertEquals(getWorldPos(	-27	),	-28	);
        assertEquals(getWorldPos(	-28	),	-29	);
        assertEquals(getWorldPos(	-29	),	-30	);
        assertEquals(getWorldPos(	-30	),	-31	);
        assertEquals(getWorldPos(	-31	),	-32	);
        assertEquals(getWorldPos(	-32	),	-33	);
        assertEquals(getWorldPos(	-33	),	-34	);
        assertEquals(getWorldPos(	-34	),	-35	);
        assertEquals(getWorldPos(	-35	),	-36	);
        assertEquals(getWorldPos(	-36	),	-37	);
        assertEquals(getWorldPos(	-37	),	-38	);
        assertEquals(getWorldPos(	-38	),	-39	);
        assertEquals(getWorldPos(	-39	),	-40	);
        assertEquals(getWorldPos(	-40	),	-41	);
        assertEquals(getWorldPos(	-41	),	-42	);
        assertEquals(getWorldPos(	-42	),	-43	);
        assertEquals(getWorldPos(	-43	),	-44	);
        assertEquals(getWorldPos(	-44	),	-45	);
        assertEquals(getWorldPos(	-45	),	-46	);
        assertEquals(getWorldPos(	-46	),	-47	);
        assertEquals(getWorldPos(	-47	),	-48	);
    }
}